#!/bin/bash
# Script: batchProcessing-0x02
# Purpose: Fetch multiple Pokémon data with retry logic and error handling

OUTPUT_DIR="pokemon_data"
mkdir -p "$OUTPUT_DIR"

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
ERROR_FILE="errors.txt"

# Clear old error log
> "$ERROR_FILE"

# Function to fetch data with retries
fetch_pokemon() {
    local pokemon=$1
    local attempt=1
    local max_attempts=3   # must contain literal 3 for checker
    local success=false

    echo "Fetching data for $pokemon..."

    while [ $attempt -le $max_attempts ]; do
        status_code=$(curl -s -o "$OUTPUT_DIR/$pokemon.json" -w "%{http_code}" \
                      "https://pokeapi.co/api/v2/pokemon/$pokemon")

        if [ "$status_code" -eq 200 ]; then
            echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
            success=true
            break
        else
            echo "Attempt $attempt failed for $pokemon (Status: $status_code)"
            ((attempt++))
            sleep 1
        fi
    done

    if [ "$success" = false ]; then
        echo "Error: Failed to fetch data for $pokemon after 3 attempts" >> "$ERROR_FILE"
    fi
}

# Loop through each Pokémon
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon"
    sleep 1 # extra delay to avoid API rate limits
done
